-content_for :widget_title do
  Program Information

-content_for :widget_buttons do
  %a.clip{:href => "#edit-program-modal", :'data-toggle' => 'modal-form', :title => 'Edit Program'}
    .button.buttonlock

.programinformation
  .toolbar-widget
    %a.btn.btn-warning{ :href => import_flow_program_path(@program) }
      %i.gcmsicon-import-white
      Import Regs
    %a.btn.btn-warning{ :href => mapping_program_path(program) }
      %i.gcmsicon-mapping-white
      Reg Mapper
    -if !program.company?
      %a.btn.btn-warning{ :href => '#create-cycle-modal', :'data-toggle' => 'modal-form' }
        %i.gcmsicon-play-white
        Start Audit
  %hr.hr-widget

  =program.title
  \|
  =program.slug
  \|
  =program.company? ? 'Company' : 'Regulation'

  %h3 Description

  .item
    =program.description

  .item
    Created:
    =display_time(program.created_at)
  .item
    Updated:
    =display_time(program.updated_at)

  %h3 Sections
  .item
    Done: 
    =@stats[:sections_done_count]
  .item
    N/A: 
    =@stats[:sections_na_count]
  .item
    Not Done: 
    =@stats[:sections_undone_count]

  %h3 Controls
  .item
    Controls: 
    =@stats[:controls_count]

  .item
    Parented Controls: 
    =@stats[:controls_parented_count]

#create-cycle-modal.modal.hide.fade
  -cycle = Cycle.new(:program_id => program.id)
  =form_for cycle, :url => flow_cycles_path, :method => :post, :remote => true, :html => {:class => :form} do |f|
    .modal-header
      %a.close{ "data-dismiss" => "modal" } x
      %h1 Edit Audit Cycle
    .modal-body
      =render :partial => 'cycles/form',
              :locals  => { :f => f }
    .modal-footer
      =f.submit pat(:save)
      =f.submit pat(:cancel), :type => 'reset'
