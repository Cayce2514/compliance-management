%ul.tree-structure
  =walk_slug_tree(Program.slugtree(sections)) do |item, step|
    -content_id = "content_#{rand(36**8).to_s(36)}" # unique ID for toggle
    .item-main
      .openclose{ :class => 'lastchild' }
      .item-title
        .row-fluid
          =render :partial => 'object_leaf', :locals => { :instance => item }
          .span1
            -controls = item.linked_controls
            -status_class = (controls.empty? && !item.na?) ? 'badge-danger' : 'badge-warning'
            %a.controllist.attached.badge{:href => mapping_section_dialog_path(item), :class => status_class}
              -controls = item.linked_controls
              -if !controls.empty?
                =controls.size
                -#%ul{ :title => controls.map(&:slug).join(", ") }
                  %li
                    %strong #{}:
                  -controls.each do |control|
                    %li=control.slug
              -elsif item.na?
                N/A
              -else
                %strong 0
        .item-actions
          %a.btn.btn-mini.pull-right{ :href => edit_flow_section_path(item), :'data-toggle' => 'modal-ajax-form', :'data-modal-reset' => 'reset', :'data-dirty' => "#regulations, #combo", :title => 'Edit Section' }
            %i.grcicon-edit-grey
