As root:
============

  apt-get install mysql-client mysql-server ruby-dev libsqlite3-dev libmysqlclient-dev nginx mercurial build-essential java6-sdk git-core libreadline6-dev libssl-dev
  adduser --shell /bin/bash --disabled-password --home /home1/cmsprod cmsprod

  su - cmsprod

As cmsprod:
==============

install rvm

Run:
  rvm install jruby # or ruby-1.9.2
  rvm gemset create cms

Add to .bashrc
  alias so='. ~/.bashrc ; . ~/.profile'
  alias my='mysql -ucmsprod -pcmsprod cms'
  alias mydump='mysqldump -ucmsprod -pcmsprod cms'
  export RAILS_ENV=production
  export JRUBY_OPTS=--1.9

set RAILS_ENV to 'development' if this is not production.

Setup rubygems:
  hg clone https://rails.compliance-management.googlecode.com/hg/ cms
  cd cms

At this point rvm will ask you if it should trust the .rvmrc in this project directory.  Say yes and the correct version .

  gem update --system
  gem install bundler
  bundle install --binstubs
  mkdir log

For dev:
===========

  rake dm:auto:migrate seed
  script/rails server

For prod:
=============

Change /etc/nginx/sites-enabled/default:

  server {
          listen   80 default;
          server_name  SERVER;

          access_log  /var/log/nginx/cms-access.log;

          location / {
                  proxy_pass http://localhost:3000/;

                  proxy_set_header  X-Real-IP  $remote_addr;
                  proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header  Host $http_host;

                  root   /var/www/nginx-default;
                  index  index.html index.htm;
          }
  }


adjust SERVER above to your hostname as visible from outside.

  sudo mysql
    create database cms;
    grant all on cms.* to cms@localhost identified by "cms";

adjust:

  config/database.yml

And finally, starting the application server in production:

  script/rails server -d
