-content_for :modal_title do
  -if f.object.new_record?
    Create a new program
  -else
    Edit program

.row-fluid
  .span6
    .row-fluid
      .span4{ :class => error_class(f, :slug) }
        %label{:for => "program-slug"} Short Code
        %input#program-slug.span12{:name => "program[slug]", :placeholder => "SOX", :type => "text", :value => f.object.slug}
        =error_messages_inline(f, :slug)

      -#.span2.disabled{ :class => error_class(f, :version) }
        %label{:for => "program-version"} Version
        %input#program-version.input-supermini{:name => "program[version]", :placeholder => "SOX", :type => "text", :name => "program[version]", :value => nil}
        =error_messages_inline(f, :version)

      .span4{ :class => error_class(f, :type) }
        %label{:for => "program-type"} Type
        %select#program-type.input-small{:name => "program[type]"}
          %option{:value => "regulation", :selected => !f.object.company} Reg
          %option{:value => "company", :selected => f.object.company} Company
        =error_messages_inline(f, :type)

    .row-fluid
      .span12{ :class => error_class(f, :title) }
        %label{:for => "program-title"} Title
        %input#program-title.span12{:placeholder => "SOX", :type => "text", :name => "program[title]", :value => f.object.title}/
        =error_messages_inline(f, :title)

    .row-fluid
      .span12{ :class => error_class(f, :description) }
        %label{:for => "program-description"} Description
        %textarea.span12#program-description{:placeholder => "", :name => "program[description]"}=f.object.description
        =error_messages_inline(f, :description)

  .span6
    .row-fluid
      .span12.disabled{ :class => error_class(f, :url) }
        %label{:for => 'program-url'} URL for Organization
        %input#program-url.span12{:placeholder => "http://", :type => "text", :name => "program[source_website][link]", :value => nil}
        =error_messages_inline(f, :url)

    .row-fluid
      .span12.disabled{ :class => error_class(f, :organization) }
        %label{:for => 'program-organization'} Organization for Program
        %input#program-organization.span12{:placeholder => "Organization Responsible for this Program", :type => "text", :name => "program[organization]", :value => nil}
        =error_messages_inline(f, :organization)

    .row-fluid
      .span12.disabled{ :class => error_class(f, :scope) }
        %label{:for => "program-scope"} Scope / Applicability (this text used for mail merge view)
        %textarea#program-scope.span12{:placeholder => "", :rows => "4", :name => "program[scope]", :value => nil}
        =error_messages_inline(f, :scope)

-if !f.object.new_record?
  =render :partial => 'shared/object_info', :locals => { :object => f.object, :approved => false }
