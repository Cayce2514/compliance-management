-content_for :header do
  %h5.highlighted
    =link_to 'Programs', programs_dash_path
    %span.divider /
    Mapping
    %span.divider /
  %h1=link_to @program.title, flow_program_path(@program)

.row
  .span4#section_list
    =render :partial => 'section_list',
            :layout => 'layouts/widget_box',
            :locals => { :sections => @program.sections.all }

    =render :partial => 'selected_section',
            :layout => 'layouts/widget_box',
            :locals => {:section => nil}

  .span4#rcontrol_list
    =render :partial => 'control_list',
            :layout => 'layouts/widget_box',
            :locals => { :controls => @rcontrols, :title_prefix => 'Regulation', :control_type => 'regulation' }

    =render :partial => 'selected_control',
            :layout => 'layouts/widget_box',
            :locals => {:control => nil, :control_type => 'rcontrol', :map_button_id => :cmap, :map_button_path => mapping_map_ccontrol_path }

  .span4#ccontrol_list
    =render :partial => 'control_list',
            :layout => 'layouts/widget_box',
            :locals => { :controls => @ccontrols, :title_prefix => 'Company', :control_type => 'company' }

    =render :partial => 'selected_control',
            :layout => 'layouts/widget_box',
            :locals => {:control => nil, :control_type => 'ccontrol', :map_button_id => nil }

#controls-dialog(style='display: none' title='Controls Mapped to this Section')
  %div
    Content

:javascript
  function bind_section_selectors() {
    $('#section_list')
      .on("ajax:success", '.selector', function(evt, data, status, xhr){
        $('#selected_sections').replaceWith(xhr.responseText);
        $('#section_list .selector').closest('.item').removeClass('selected');
        $(this).closest('.item').addClass('selected');
      });
  }

  function bind_rcontrol_selectors($el) {
    $('#rcontrol_list')
      .on("ajax:success", '.selector', function(evt, data, status, xhr){
        $('#selected_rcontrol').replaceWith(xhr.responseText);
        $('#rcontrol_list .selector').closest('.item').removeClass('selected');
        $(this).closest('.item').addClass('selected');
      });
  }

  function bind_ccontrol_selectors() {
    $('#ccontrol_list')
      .on("ajax:success", '.selector', function(evt, data, status, xhr){
        $('#selected_ccontrol').replaceWith(xhr.responseText);
        $('#ccontrol_list .selector').closest('.item').removeClass('selected');
        $(this).closest('.item').addClass('selected');
      });
  }

  $(document).ready(function(){
    bind_section_selectors();
    bind_rcontrol_selectors();
    bind_ccontrol_selectors();
    $('#controls-dialog').dialog({autoOpen : false, width: 400, height:300});
    $('#section_list').on('click', 'a.controls', function() {
      $('#controls-dialog > :first-child').load($(this).data('href'), function() {
        $('#controls-dialog').dialog('open');
      });
    });
    $('#cmap, #rmap').on('click', function() {
      $('#controls-dialog').dialog('close');
    });
  });

  function update_map_buttons() {
    var section_id = $("#selected_sections").attr('oid') || "";
    var rcontrol_id = $("#selected_rcontrol").attr('oid') || "";
    var ccontrol_id = $("#selected_ccontrol").attr('oid') || "";
    var qstr = '?' + $.param({section: section_id, rcontrol: rcontrol_id, ccontrol: ccontrol_id});
    $.getJSON('#{mapping_buttons_path(:format => "json")}' + qstr,
      function(data){
        var rmap = $('#rmap');
        var rmap_text = $(rmap.children()[0]);
        var cmap = $('#cmap');
        var cmap_text = $(cmap.children()[0]);
        rmap_text.text(data[0] ? 'Unmap section from control' : 'Map section to control')
        rmap.attr('disabled', !(section_id && rcontrol_id));
        rmap.attr('href', rmap.attr('href').split('?')[0] + qstr + (data[0] ? '&u=1' : ""));
        cmap_text.text(data[1] ? 'Unmap control from control' : 'Map control to control')
        cmap.attr('disabled', !(rcontrol_id && ccontrol_id));
        cmap.attr('href', cmap.attr('href').split('?')[0] + qstr + (data[1] ? '&u=1' : ""));
      });
  }

  function clear_selection(el) {
    $(el).closest('.WidgetBox').prev().find('.selected').removeClass('selected');
    description_el = $(el).closest('.WidgetBox').find('.WidgetBoxContent .description .content')
    $(description_el).replaceWith('Nothing selected.');
    $(el).closest('.WidgetBox').find('.WidgetBoxContent .description').attr('oid', '');
    update_map_buttons();
  }
