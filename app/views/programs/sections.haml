%ul.slugtree
  =walk_slug_tree(Program.slugtree(sections)) do |item, step|
    -content_id = "content_#{rand(36**8).to_s(36)}" # unique ID for toggle
    .slot.regulationslot{ :'data-toggle' => 'collapse', :'data-target' => "##{content_id}" }
      -#%a.widgetbtn.fltrt{ :href => flow_section_path(item), :title => 'View Section' }
        %i.gcmsicon-arrowright-grey
      %a.widgetbtn.fltrt{ :href => edit_flow_section_path(item), :'data-toggle' => 'modal-ajax-form', :'data-modal-reset' => 'reset', :title => 'Edit Section' }
        %i.gcmsicon-edit-grey
      .expander
      %span.prefix=item.slug
      =item.title || item.description
    -controls = item.linked_controls
    -status_class = (controls.empty? && !item.na?) ? 'statusred' : 'statusyellow'
    %a.controllist.attached{ :class => status_class, :href => mapping_section_dialog_path(item) }

      -controls = item.linked_controls
      -if !controls.empty?
        %ul{ :title => controls.map(&:slug).join(", ") }
          %li
            %strong #{controls.size}:
          -controls.each do |control|
            %li=control.slug
      -elsif item.na?
        N/A
      -else
        %strong 0
    .row-fluid-slotcontent.collapse{ :id => content_id }
      -#%a.btn.btn-blue.addbtn.fltrt{ :href => edit_flow_section_path(item), :'data-toggle' => 'modal-ajax-form', :'data-modal-reset' => 'reset', :title => 'Edit Section' } Edit
      %p=item.description
